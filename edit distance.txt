class Solution {
public:
    
    int func(int i,int j,string a,string b,vector<vector<int>>&dp){
        if(i<0)
            return j+1;
        if(j<0)
            return i+1;
        if(dp[i][j]!=-1)
            return dp[i][j];
        if(a[i]==b[j])
            return dp[i][j] =func(i-1,j-1,a,b,dp);
        else
            return dp[i][j] =1+min(func(i,j-1,a,b,dp),min(func(i-1,j,a,b,dp),func(i-1,j-1,a,b,dp)));
    }
    int minDistance(string word1, string word2) {
        int n=word1.size();
        int m=word2.size();
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        //return func(n-1,m-1,word1,word2,dp);
        
        for(int i=0;i<n+1;i++)
            dp[i][0]=i;
        for(int j=0;j<m+1;j++)
            dp[0][j]=j;
        
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(word1[i-1]==word2[j-1])
             dp[i][j] =dp[i-1][j-1];
        else
            dp[i][j] =1+min(dp[i][j-1],min(dp[i-1][j],dp[i-1][j-1]));
            }
        }
        return dp[n][m];
    }
};
class Solution {
public:
    int  largestRectangleArea(vector<int>& h) {
        int n=h.size();
        stack<int>st;
        vector<int>left(n);
        vector<int>right(n);
        for(int i=0;i<n;i++){
            while(!st.empty() && h[i] <=h[st.top()])
                st.pop();
            if(st.empty())left[i]=0;
            else
                left[i]=st.top()+1;
            st.push(i);
        }
        
        while(!st.empty())st.pop();
        
         for(int i=n-1;i>=0;i--){
            while(!st.empty() && h[i] <=h[st.top()])
                st.pop();
            if(st.empty())right[i]=n-1;
            else
                right[i]=st.top()-1;
            st.push(i);
        }
        
        
        int maxi=0;
        for(int i=0;i<n;i++){
            maxi=max(maxi,(h[i]*(right[i]-left[i]+1)));
        }
                     
                     return maxi;
    }
    
    int maximalRectangle(vector<vector<char>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        vector<int>h(m,0);
        int maxar=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]=='1')
                    h[j]++;
                else h[j]=0;
                
                
            }
            
            int ar= largestRectangleArea(h);
            maxar=max(maxar,ar);
        }
        
        return maxar;
    }
};
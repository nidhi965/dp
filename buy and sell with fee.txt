class Solution {
public:
    int solve(int i,int buy,vector<int>&p,int fee){
        if(i==p.size())
            return 0;
        if(buy==1){
            return max(-p[i]+solve(i+1,0,p,fee),solve(i+1,1,p,fee));
        }
        
        return max(p[i]-fee+solve(i+1,1,p,fee),solve(i+1,0,p,fee));
    }
    int maxProfit(vector<int>& p, int fee) {
       // return solve(0,1,p,fee);
        int n=p.size();
        vector<vector<int>>dp(n+1,vector<int>(2,0));
        for(int i=n-1;i>=0;i--){
            for(int buy=0;buy<=1;buy++){
                if(buy==1){
            dp[i][buy]=max(-p[i]+dp[i+1][0],dp[i+1][1]);
        }
        
      else
          dp[i][buy]=max(p[i]-fee+dp[i+1][1],dp[i+1][0]);
            }
        }
        
        return dp[0][1];
    }
};